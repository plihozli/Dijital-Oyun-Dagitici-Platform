<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Vm3PL7hZZAEFlkAQWWQf/9k=
</value>
  </data>
</root>